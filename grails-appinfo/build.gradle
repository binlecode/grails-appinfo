buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

//version "0.1"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    profile "org.grails.profiles:plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    ////
    compile "org.springframework.boot:spring-boot-starter-actuator"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

grailsPublish {
    // load bintray user and key from jvm -Dvar for security
    user = System.getProperty('bintrayUser')
    key = System.getProperty('bintrayKey')
    githubSlug = 'ikaliZpet/grails-appinfo'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Appinfo plugin"
    desc = "A Grails plugin to provide applicaiton system information for health-check and runtime inspection"
    developers = [binle: "Bin Le"]


}
